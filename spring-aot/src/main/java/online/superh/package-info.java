/*

（1）JIT， Just-in-time,动态(即时)编译，边运行边编译；

在程序运行时，根据算法计算出热点代码，
然后进行 JIT 实时编译，这种方式吞吐量高，
有运行时性能加成，可以跑得更快，
并可以做到动态生成代码等，
但是相对启动速度较慢，并需要一定时间和调用频率才能触发 JIT 的分层机制。
JIT 缺点就是编译需要占用运行时资源，会导致进程卡顿。

（2）AOT，Ahead Of Time，指运行前编译，预先编译:

AOT 编译能直接将源代码转化为机器码，内存占用低，启动速度快，
可以无需 runtime 运行，直接将 runtime 静态链接至最终的程序中，
但是无运行时性能加成，不能根据程序运行情况做进一步的优化，
AOT 缺点就是在程序运行前编译会使程序安装的时间增加。


简单来讲：
    JIT即时编译指的是在程序的运行过程中，将字节码转换为可在硬件上直接运行的机器码，并部署至托管环境中的过程。
    而 AOT 编译指的则是，在程序运行之前，便将字节码转换为机器码的过程。
 */
package online.superh;